meta {
  name: 注册设备
  type: http
  seq: 1
}

post {
  url: {{baseUrl}}/api/devices/register
  body: json
}

body:json {
  {
    "device_name": "打印机001",
    "device_sn": "YL123456789",
    "merchant_id": "{{merchant_id}}",
    "timestamp": "{{$timestamp}}",
    "email": "merchant@example.com",
    "domain": "www.example.com"
  }
}

vars:pre-request {
  timestamp: Math.floor(Date.now() / 1000).toString()
}

headers {
  Content-Type: application/json
}

script:pre-request {
  // 生成签名
  const params = {...request.body};
  const apiKey = environment.get("apiKey");
  
  // 按键名排序并构造待签名字符串
  const sortedKeys = Object.keys(params).sort();
  const stringToBeSigned = sortedKeys
    .map(key => `${key}=${params[key]}`)
    .join('&');
  
  // 计算 HMAC-SHA256 签名
  const sign = CryptoJS.HmacSHA256(stringToBeSigned, apiKey).toString();
  
  // 将签名添加到请求体
  request.body.sign = sign;
}

tests {
  test("Status code is 200", function() {
    expect(response.status).to.equal(200);
  });
  
  test("Response has success status", function() {
    expect(response.body).to.have.property('code').equals(0);
    expect(response.body).to.have.property('message');
    expect(response.body).to.have.property('data');
  });
  
  test("Device registration data is correct", function() {
    expect(response.body.data).to.have.property('device_id');
    expect(response.body.data).to.have.property('activation_code');
  });
} 